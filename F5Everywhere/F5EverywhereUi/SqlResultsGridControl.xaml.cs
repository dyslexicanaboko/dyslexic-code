using System.Collections.Generic;
using System.Data;
using System.Windows.Controls;
using F5EverywhereLib.Domain;

namespace F5EverywhereUi
{
    /// <summary>
    /// Interaction logic for SqlResultsGridControl.xaml
    /// </summary>
    public partial class SqlResultsGridControl : UserControl
    {
        public SqlResultsGridControl()
        {
            InitializeComponent();
        }

        public void PresentResults(Dictionary<DatabaseInfo, ExecutionResult> results, bool showUnionedResultsTab)
        {
            List<SqlDatabaseResult> lstDbs = SqlDatabaseResult.GetSqlResult(results);

            if (showUnionedResultsTab && lstDbs.Count > 0)
            {
                var union = new SqlDatabaseResult();
                union.Name = "Unioned Results";
                union.EvaluatedResultsAsDataTables = new List<DataTable>();

                DataRow dr = null;
                DataTable dtClone = null;
                DataTable dtIndex = null;

                //This is just a model, it is arbitrary, hence why zero is being picked
                SqlDatabaseResult schema = lstDbs[0];

                //For the sake of english - because this get confusing
                int resultsPerDatabase = schema.EvaluatedResultsAsDataTables.Count;

                //For each database's execution result (which is a list of Virtual Tables)
                //These have to be run by index, so that they are unioned properly
                //The lst[0] is arbitrary
                for (int i = 0; i < resultsPerDatabase; i++)
                {
                    //Clone the virtual table, from the arbitrary model
                    dtClone = schema.EvaluatedResultsAsDataTables[i].Clone();

                    //Say where the result came from
                    dtClone.Columns.Add("Database", typeof(string));

                    //Go across each database for THIS (i) specific virtual table result
                    foreach (SqlDatabaseResult db in lstDbs)
                    {
                        //THIS index for THIS Database - index stays constant, database changes
                        dtIndex = db.EvaluatedResultsAsDataTables[i];

                        foreach (DataRow edr in dtIndex.Rows)
                        {
                            dr = dtClone.NewRow();

                            //Name where the data came from for each row
                            dr["Database"] = db.Name;

                            //Transfer the data for the original columns
                            for (int c = 0; c < dtIndex.Columns.Count; c++)
                                dr[c] = edr[c];

                            dtClone.Rows.Add(dr);
                        }
                    }

                    //When finished traversing this index for all DBs, then add the result to the union
                    union.EvaluatedResultsAsDataTables.Add(dtClone);
                }

                //When finished with everything, get the Views
                union.LoadDataViews();

                //Add the union so it can be displayed in its own tab
                lstDbs.Add(union);
            }

            tcResults.ItemsSource = lstDbs;
            tcResults.SelectedIndex = 0;
        }

        private void tcResults_DataGrid_AutoGeneratedColumns(object sender, System.EventArgs e)
        {
            //DataGrid dg = sender as DataGrid;

            //DataGridColumn col = null;

            //for (int i = 0; i < dg.Columns.Count; i++)
            //{
            //    dg.Rows
            //    dg.Columns[i]

            //}
            
            //col.Width = col.ActualWidth;
        }
    }
}
