/*
Deployment script for MockDebt

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MockDebt"
:setvar DefaultFilePrefix "MockDebt"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL10.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL10.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[SavingsUnit]...';


GO
CREATE TABLE [dbo].[SavingsUnit] (
    [SavingsUnitId] INT             IDENTITY (1, 1) NOT NULL,
    [UserId]        INT             NOT NULL,
    [Name]          VARCHAR (255)   NOT NULL,
    [Price]         DECIMAL (19, 4) NOT NULL,
    [ItemLink]      VARCHAR (500)   NULL,
    [Notes]         VARCHAR (MAX)   NULL,
    [CreatedOn]     DATETIME2 (0)   NOT NULL,
    PRIMARY KEY CLUSTERED ([SavingsUnitId] ASC)
);


GO
PRINT N'Creating [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [UserId]    INT           IDENTITY (1, 1) NOT NULL,
    [UserName]  VARCHAR (255) NOT NULL,
    [CreatedOn] DATETIME2 (0) NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating [dbo].[DF_dbo_SavingsUnit_CreatedOn]...';


GO
ALTER TABLE [dbo].[SavingsUnit]
    ADD CONSTRAINT [DF_dbo_SavingsUnit_CreatedOn] DEFAULT CURRENT_TIMESTAMP FOR [CreatedOn];


GO
PRINT N'Creating [dbo].[DF_dbo_User_CreatedOn]...';


GO
ALTER TABLE [dbo].[User]
    ADD CONSTRAINT [DF_dbo_User_CreatedOn] DEFAULT CURRENT_TIMESTAMP FOR [CreatedOn];


GO
PRINT N'Creating [dbo].[FK_dbo_User_dbo_SavingsUnit_UserId]...';


GO
ALTER TABLE [dbo].[SavingsUnit] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo_User_dbo_SavingsUnit_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[User] ([UserId]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[SavingsUnit] WITH CHECK CHECK CONSTRAINT [FK_dbo_User_dbo_SavingsUnit_UserId];


GO
PRINT N'Update complete.';


GO
